<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
  </configSections>
  <log4net debug="false">
    <root>
      <level value="ALL"/>
      <!-- 默认总会写日志 -->
      <!--<appender-ref ref="DefaultAppender" />-->
    </root>
    <logger name="DefaultLogger">
      <level value="ALL"/>
      <appender-ref ref="DefaultAppender"/>
    </logger>
    <logger name="ExceptionLogger">
      <level value="ALL"/>
      <appender-ref ref="ExceptionAppender"/>
    </logger>
    <appender name="DefaultAppender" type="log4net.Appender.RollingFileAppender">
      <file value="./logs/"/>
      <StaticLogFileName value="false"/>
      <appendToFile value="true"/>
      <rollingStyle value="Date"/>
      <datePattern value="[yyyy-MM-dd]'_Default.log'"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger - %message%newline"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="DEBUG"/>
        <levelMax value="INFO"/>
      </filter>
    </appender>
    <appender name="ExceptionAppender" type="log4net.Appender.RollingFileAppender">
      <!--绝对路径："D:\logs\"-->
      <file value="./logs/"/>
      <StaticLogFileName value="false"/>
      <appendToFile value="true"/>
      <rollingStyle value="Date"/>
      <datePattern value="[yyyy-MM-dd]'_Exception.log'"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%newline%date [%thread] %-5level %logger - %username %identity%message%newline"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="WARN"/>
        <levelMax value="FATAL"/>
      </filter>
    </appender>
  </log4net>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0"/>
      </parameters>
    </defaultConnectionFactory>
  </entityFramework>
  <appSettings>
    <add key="Agent-Credentials" value="rocky:e89e4780c76ce101f1a32a7d87e9489d"/>
    <add key="Agent-Server" value="azure.xineworld.com#,"/>
    <add key="Agent-MaxDevice" value="20"/>
    <add key="Agent-Host" value="agent.xineworld.com"/>
    <add key="Agent-BlockPorts" value="1433"/>
    <add key="Agent-CryptoKey" value="58328790-5CB2-4F28-A2C2-B76E14B53599"/>
    <add key="StorageServiceListenPort" value="1081"/>
    <add key="StorageServiceStorageUrl" value="http://dev.storage.0710.com/"/>
    <add key="LogEmail" value="false"/>
    <add key="LogSMS" value="false"/>
    <add key="ResendFailEmail" value="false"/>
    <add key="ResendFailEmailConfigID" value=""/>
    <add key="NotifyDomains" value=".0710.com,.xfjob.cn"/>
    <add key="ClientTimeout" value="30"/>
    <add key="ClientHandlerFormat" value="http://dev.sso.{0}/sso.ashx"/>
  </appSettings>
  <connectionStrings>
    <add name="spUser" connectionString="Data Source=azure.open.net;Initial Catalog=InfrastructureService;User ID=sa;Password=XineNet2013" providerName="System.Data.SqlClient" />
    <add name="InfrastructureServiceEntities" connectionString="metadata=res://*/DataAccess.Service.csdl|res://*/DataAccess.Service.ssdl|res://*/DataAccess.Service.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=azure.open.net;initial catalog=InfrastructureService;persist security info=True;user id=sa;password=XineNet2013;multipleactiveresultsets=True;application name=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    <add name="InfrastructureService_UserEntities" connectionString="metadata=res://*/DataAccess.User.csdl|res://*/DataAccess.User.ssdl|res://*/DataAccess.User.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=azure.open.net;initial catalog=InfrastructureService.User;persist security info=True;user id=sa;password=XineNet2013;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <system.web>
    <compilation debug="true" targetFramework="4.0"/>
    <globalization requestEncoding="utf-8" responseEncoding="utf-8" fileEncoding="utf-8" culture="zh-CN"/>
    <httpHandlers>
      <add verb="*" path="X.ashx" type="Rocky.Net.xHttpServer, Rocky"/>
      <add verb="*" path="Go.ashx" type="Rocky.Net.xHttpHandler, Rocky"/>
    </httpHandlers>
  </system.web>
  <system.serviceModel>
    <bindings>
      <wsHttpBinding>
        <binding name="wsHttpBindingDefault">
          <security mode="None"/>
          <!--<security mode="Message">
            <message clientCredentialType="UserName" />
          </security>-->
        </binding>
        <!--0.5M-->
        <binding name="wsHttpBindingLarge" maxReceivedMessageSize="524288">
          <readerQuotas maxStringContentLength="524288"/>
          <security mode="None"/>
          <!--<security mode="Message">
            <message clientCredentialType="UserName" />
          </security>-->
        </binding>
      </wsHttpBinding>
    </bindings>
    <services>
      <service name="InfrastructureService.DomainService.SearchService">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8733/Design_Time_Addresses/InfrastructureService.DomainService/SearchService/"/>
          </baseAddresses>
        </host>
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="wsHttpBindingDefault" contract="InfrastructureService.Contract.ISearchService">
          <!-- 
              部署时，应删除或替换下列标识元素，以反映
             用来运行所部署服务的标识。删除之后，WCF 将
              自动推断相应标识。
          -->
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <!-- Metadata Endpoints -->
        <!-- 元数据交换终结点供相应的服务用于向客户端做自我介绍。 -->
        <!-- 此终结点不使用安全绑定，应在部署前确保其安全或将其删除 -->
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service name="InfrastructureService.DomainService.StorageService">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8733/Design_Time_Addresses/InfrastructureService.DomainService/StorageService/"/>
          </baseAddresses>
        </host>
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="wsHttpBindingDefault" contract="InfrastructureService.Contract.IStorageService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service name="InfrastructureService.DomainService.MessageService">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8733/Design_Time_Addresses/InfrastructureService.DomainService/MessageService/"/>
          </baseAddresses>
        </host>
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="wsHttpBindingLarge" contract="InfrastructureService.Contract.IMessageService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service name="InfrastructureService.DomainService.SiteService">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8733/Design_Time_Addresses/InfrastructureService.DomainService/SiteService/"/>
          </baseAddresses>
        </host>
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="wsHttpBindingLarge" contract="InfrastructureService.Contract.ISiteService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service name="InfrastructureService.DomainService.SSOService">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8733/Design_Time_Addresses/InfrastructureService.DomainService/SSOService/"/>
          </baseAddresses>
        </host>
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="wsHttpBindingDefault" contract="InfrastructureService.Contract.IUserService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- 为避免泄漏元数据信息，请在部署前将以下值设置为 false -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <!-- 要接收故障异常详细信息以进行调试，请将以下值设置为 true。在部署前设置为 false 以避免泄漏异常信息 -->
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <!--<serviceCredentials>
            <serviceCertificate findValue="azure.local.com" storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName" />
            <clientCertificate>
              -->
          <!--authentication - 证书验证模式 -->
          <!--
              -->
          <!--X509CertificateValidationMode.None - 不使用证书验证-->
          <!--
              -->
          <!--X509CertificateValidationMode.PeerTrust - 如果证书位于被信任的人的存储区中，则有效-->
          <!--
              <authentication certificateValidationMode="PeerTrust" />
            </clientCertificate>
            <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="InfrastructureService.DomainService.ServiceValidator, InfrastructureService.DomainService" />
          </serviceCredentials>-->
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true">
      <serviceActivations>
        <add relativeAddress="SearchService.svc" service="InfrastructureService.DomainService.SearchService"/>
        <add relativeAddress="StorageService.svc" service="InfrastructureService.DomainService.StorageService"/>
        <add relativeAddress="MessageService.svc" service="InfrastructureService.DomainService.MessageService"/>
        <add relativeAddress="SiteService.svc" service="InfrastructureService.DomainService.SiteService"/>
        <add relativeAddress="SSOService.svc" service="InfrastructureService.DomainService.SSOService"/>
      </serviceActivations>
    </serviceHostingEnvironment>
  </system.serviceModel>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules runAllManagedModulesForAllRequests="true"/>
    <handlers>
      <add name="xServer" verb="*" path="X.ashx" type="Rocky.Net.xHttpServer, Rocky"/>
      <add name="xAgent" verb="*" path="Go.ashx" type="Rocky.Net.xHttpHandler, Rocky"/>
    </handlers>
  </system.webServer>
</configuration>